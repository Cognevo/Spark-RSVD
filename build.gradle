buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.6.1'
  }
}

plugins {
    id "java"
    id "scala"
    id "maven-publish"
    id "com.github.maiflai.scalatest" version "0.22"
    id "com.bmuschko.nexus" version "2.3.1"
    id 'io.codearte.nexus-staging' version '0.12.0'
}

group 'com.criteo'
version '0.1-alpha'

sourceCompatibility = 1.8

ext {
    sparkVersion = '2.3.1'
    nexusPassword = "tutu"
    nexusUsername = "toto"
}

repositories {
    mavenCentral()
}

apply from: 'publish.gradle'



dependencies {

    //scala version
    compile 'org.scala-lang:scala-library:2.11.1'

    //spark version
    compile "org.apache.spark:spark-core_2.11:$sparkVersion"
    compile "org.apache.spark:spark-mllib_2.11:$sparkVersion"

    compile group: 'org.scalanlp', name: 'breeze_2.11', version: '0.13.2'

    compile group: 'com.typesafe.scala-logging', name: 'scala-logging-slf4j_2.11', version: '2.1.2'

    //https://mvnrepository.com/artifact/com.github.scopt/scopt
    compile 'com.github.scopt:scopt_2.11:3.3.0'

    compile group: 'de.javakaffee', name: 'kryo-serializers', version: '0.42'

    // https://mvnrepository.com/artifact/org.scalatest/scalatest
    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '2.2.4'
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

publishing {
    publications {
        rsvd(MavenPublication) {
            from components.java
            artifact sourceJar

            pom.withXml {
                asNode().with {
                    appendNode('packaging', 'jar')
                    appendNode('name', 'Spark-RSVD')
                    appendNode('description', 'R-SVD for large sparse matrices on Spark')
                    appendNode('url', 'https://github.com/criteo/Spark-RSVD')
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'Apache License v2.0')
                            appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0')
                        }
                    }
                    appendNode('organization').with {
                        appendNode('name', 'Criteo')
                        appendNode('url', 'https://www.criteo.com')
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('id', 'alois-bissuel')
                            appendNode('name', 'Alo√Øs Bissuel')
                            appendNode('email', 'a.bissuel@criteo.com')
                            appendNode('organization', 'Criteo')
                            appendNode('organizationUrl', 'https://www.criteo.com')
                        }
                        appendNode('developer').with {
                            appendNode('id', 'vincent-grosbois')
                            appendNode('name', 'Vincent Grosbois')
                            appendNode('email', 'v.grosbois@criteo.com')
                            appendNode('organization', 'Criteo')
                            appendNode('organizationUrl', 'https://www.criteo.com')
                        }
                    }
                }
            }
        }
    }
    
    repositories {
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }

    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

